{"version":3,"sources":["js/PageList.js","js/routes.js"],"names":["PageList","argument","preparePage","cleanedArgument","replace","games","fetchGame","url","finalURL","fetch","then","response","json","name","released","description","articleDOM","document","querySelector","innerHTML","render","pageContest","routes","PageDetail"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAmB;AAAA,MAAlBC,QAAkB,uEAAP,EAAO;ACApC;ADCE,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,ACDJ,IAAMoB,IDCEnB,ECDI,GAAG,UDCQ,GAAGF,QAAQ,CAACG,OAAT,CAAiB,MAAjB,EAAyB,GAAzB,CAAtB;AACA,ACDF,MAAIJ,EDCEK,KAAK,GAAG,EAAZ,MCFW;AAEb,cAAYL,kBAFC;ADIX,ACDF,QDCQM,QCDMiB,CDCG,GAAG,SAAZjB,SAAY,CAACC,GAAD,EAAMN,QAAN,EAAmB;AACnC,ACLS,CAAf,SDKUO,QAAQ,GAAGD,GAAG,GAAGN,QAArB;AAEAQ,MAAAA,KAAK,WAAKD,QAAL,EAAL,CACCE,IADD,CACM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADN,EAECF,IAFD,CAEM,UAACC,QAAD,EAAc;AAAA,YACZE,IADY,GACoBF,QADpB,CACZE,IADY;AAAA,YACNC,QADM,GACoBH,QADpB,CACNG,QADM;AAAA,YACIC,WADJ,GACoBJ,QADpB,CACII,WADJ;AAElB,YAAIC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,uBAAvB,CAAjB;AAEAF,QAAAA,UAAU,CAACE,aAAX,CAAyB,UAAzB,EAAqCC,SAArC,GAAiDN,IAAjD;AACAG,QAAAA,UAAU,CAACE,aAAX,CAAyB,sBAAzB,EAAiDC,SAAjD,GAA6DL,QAA7D;AACAE,QAAAA,UAAU,CAACE,aAAX,CAAyB,eAAzB,EAA0CC,SAA1C,GAAsDJ,WAAtD;AACD,OATD;AAUD,KAbD;;AAcAT,IAAAA,SAAS,CAAC,gCAAD,EAAmCH,eAAnC,CAAT;AACD,GAnBD;;AAqBA,MAAMiB,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBC,IAAAA,WAAW,CAACF,SAAZ,kIAE0ElB,QAF1E;AAMEC,IAAAA,WAAW;AACd,GARD;;AAUAkB,EAAAA,MAAM;AACP,CAjCD","file":"routes.ad09906e.js","sourceRoot":"../src","sourcesContent":["const PageList = (argument = \"\") => {\n  const preparePage = () => {\n    var cleanedArgument = argument.replace(/\\s+/g, \"-\");\n    let games = \"\";\n\n    const fetchGame = (url, argument) => {\n      let finalURL = url + argument;\n\n      fetch (`${finalURL}`)\n      .then((response) => response.json ())\n      .then((response) => {\n        let { name, released, description } = response;\n        let articleDOM = document.querySelector(\".page-detail .article\");\n\n        articleDOM.querySelector(\"h1.title\").innerHTML = name;\n        articleDOM.querySelector(\"p.realease-date span\").innerHTML = released;\n        articleDOM.querySelector(\"p.description\").innerHTML = description;\n      });\n    };\n    fetchGame(\"https://api.rawg.io/api/games/\", cleanedArgument);\n  };\n\n  const render = () => {\n    pageContest.innerHTML = `\n      <section class=\"page-list\">\n        <div class=\"articles\">Hey, this page is a PageList template, about: ${argument}</div>\n      </section>\n      `;\n\n      preparePage();\n  };\n\n  render();\n};","import { PageList } from './PageList';\nconst routes = {\n  \"\": PageList,\n  \"pagelist\": PageList,\n  \"pagedetail\": PageDetail,\n};"]}